plugins {

    id 'eclipse'
    id 'maven-publish'
    id 'net.minecraftforge.gradle' version '5.1.+'
    id 'org.spongepowered.mixin' version '0.7.+'
}

archivesBaseName = project.archives_base_name
version = project.mod_version
group = project.maven_group

// JENKINS STUFF! LEAVE THIS ALONE!
if (System.getenv('BUILD_NUMBER') != null) {
    version = "${version}." + System.getenv('BUILD_NUMBER')
}

java.toolchain.languageVersion = JavaLanguageVersion.of(17)

println "Java: ${System.getProperty 'java.version'}, JVM: ${System.getProperty 'java.vm.version'} (${System.getProperty 'java.vendor'}), Arch: ${System.getProperty 'os.arch'}"
minecraft {
    mappings channel: 'official', version: '1.19.2'

    accessTransformer = file('src/main/resources/META-INF/accesstransformer.cfg')

    runs {
        client {
            workingDirectory project.file('run')
            property 'forge.logging.markers', 'REGISTRIES'

            property 'forge.logging.console.level', 'debug'

            property 'forge.enabledGameTestNamespaces', 'examplemod'

            mods {
                atlantis {
                    source sourceSets.main
                }
            }
        }

        server {
            workingDirectory project.file('run')

            property 'forge.logging.markers', 'REGISTRIES'

            property 'forge.logging.console.level', 'debug'

            property 'forge.enabledGameTestNamespaces', 'examplemod'

            mods {
                atlantis {
                    source sourceSets.main
                }
            }
        }

        gameTestServer {
            workingDirectory project.file('run')

            property 'forge.logging.markers', 'REGISTRIES'

            property 'forge.logging.console.level', 'debug'

            property 'forge.enabledGameTestNamespaces', 'examplemod'

            mods {
                atlantis {
                    source sourceSets.main
                }
            }
        }

        data {
            workingDirectory project.file('run')

            property 'forge.logging.markers', 'REGISTRIES'

            property 'forge.logging.console.level', 'debug'

            args '--mod', 'atlantis', '--all', '--output', file('src/generated/resources/'), '--existing', file('src/main/resources/')

            mods {
                atlantis {
                    source sourceSets.main
                }
            }
        }
    }
}

sourceSets.main.resources { srcDir 'src/generated/resources' }

repositories {
    maven { url 'https://dl.cloudsmith.io/public/geckolib3/geckolib/maven/' }
    maven {
        name = 'TerraformersMC'
        url = 'https://maven.terraformersmc.com/'
    }
    maven { url "https://maven.shedaniel.me/" }
    maven { url 'https://dl.cloudsmith.io/public/geckolib3/geckolib/maven/' }
    maven {
        name = "cursemaven"
        url = "https://www.cursemaven.com"
    }
    flatDir {
        dir 'libs'
    }
    maven {
        url = "https://maven.theillusivec4.top/"
    }
    maven {
        name = "Progwml6 maven"
        url = "https://dvs1.progwml6.com/files/maven/"
    }
    maven {
        name = "ModMaven"
        url = "https://modmaven.dev"
    }
}

dependencies {
    minecraft "net.minecraftforge:forge:1.19.2-${forge_version}"

    annotationProcessor 'org.spongepowered:mixin:0.8.5:processor'

    implementation fg.deobf('curse.maven:customportalapi-621463:3961466')
    implementation fg.deobf('curse.maven:MCglTF-591547:4279325')
    implementation fg.deobf('software.bernie.geckolib:geckolib-forge-1.19:3.1.38')
    implementation fg.deobf("curse.maven:cloth_config_forge-348521:3906388")
    implementation fg.deobf("curse.maven:cyanide_forge-348521:3906388")
    implementation fg.deobf("curse.maven:artifacts-forge-312353:4013928")
    implementation fg.deobf("curse.maven:expandability-forge-465066:3984029")

    compileOnly fg.deobf("mezz.jei:jei-1.19.2-common-api:${jei_version}")
    compileOnly fg.deobf("mezz.jei:jei-1.19.2-forge-api:${jei_version}")
    // at runtime, use the full JEI
    runtimeOnly fg.deobf("mezz.jei:jei-1.19.2-common:${jei_version}")
    runtimeOnly fg.deobf("mezz.jei:jei-1.19.2-forge:${jei_version}")

    implementation fg.deobf('org.reflections:reflections:0.10.2')

    compileOnly fg.deobf("top.theillusivec4.curios:curios-forge:1.19.2-5.1.1.0:api")
    runtimeOnly fg.deobf("top.theillusivec4.curios:curios-forge:1.19.2-5.1.1.0")
}

mixin {
    add sourceSets.main, "atlantis.refmap.json"
    config "atlantis.mixins.json"
    debug.verbose = true
}

jar {
    manifest {
        attributes([
                "Specification-Title"     : "atlantis",
                "Specification-Vendor"    : "Mysticpasta1",
                "Specification-Version"   : "1",
                "Implementation-Title"    : project.name,
                "Implementation-Version"  : project.jar.archiveVersion,
                "Implementation-Vendor"   : "Mysticpasta1",
                "Implementation-Timestamp": new Date().format("yyyy-MM-dd'T'HH:mm:ssZ")
        ])
    }
}

jar.finalizedBy('reobfJar')

publishing {
    publications {
        mavenJava(MavenPublication) {
            artifact jar
        }
    }
    repositories {
        maven {
            url "file://${project.projectDir}/mcmodsrepo"
        }
    }
}

tasks.withType(JavaCompile).configureEach {
    options.encoding = 'UTF-8'
}
